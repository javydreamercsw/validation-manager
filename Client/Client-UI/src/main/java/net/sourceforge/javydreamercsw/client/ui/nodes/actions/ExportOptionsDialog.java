package net.sourceforge.javydreamercsw.client.ui.nodes.actions;

/**
 *
 * @author Javier A. Ortiz Bultron <javier.ortiz.78@gmail.com>
 */
public class ExportOptionsDialog extends javax.swing.JDialog {

    private boolean usePlan = true;
    private boolean useTestCase = true;
    private boolean useStep = true;
    private boolean useDescription = true;

    /**
     * Creates new form ExportOptionsDialog
     */
    public ExportOptionsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testPlan = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        testCase = new javax.swing.JCheckBox();
        step = new javax.swing.JCheckBox();
        ok = new javax.swing.JButton();
        description = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.title")); // NOI18N
        setAlwaysOnTop(true);

        testPlan.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(testPlan, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.testPlan.text")); // NOI18N
        testPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testPlanActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.jLabel1.text")); // NOI18N

        testCase.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(testCase, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.testCase.text")); // NOI18N
        testCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testCaseActionPerformed(evt);
            }
        });

        step.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(step, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.step.text")); // NOI18N
        step.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(ok, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.ok.text")); // NOI18N
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        description.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(description, org.openide.util.NbBundle.getMessage(ExportOptionsDialog.class, "ExportOptionsDialog.description.text")); // NOI18N
        description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(step)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ok))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(description)
                            .addComponent(testCase)
                            .addComponent(jLabel1)
                            .addComponent(testPlan))
                        .addGap(0, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testPlan)
                .addGap(8, 8, 8)
                .addComponent(description)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testCase)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(ok)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(step)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        setVisible(false);
    }//GEN-LAST:event_okActionPerformed

    private void testPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testPlanActionPerformed
        usePlan = testPlan.isSelected();
    }//GEN-LAST:event_testPlanActionPerformed

    private void testCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testCaseActionPerformed
        useTestCase = testCase.isSelected();
    }//GEN-LAST:event_testCaseActionPerformed

    private void stepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepActionPerformed
        useStep = step.isSelected();
    }//GEN-LAST:event_stepActionPerformed

    private void descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionActionPerformed
        useDescription = description.isSelected();
    }//GEN-LAST:event_descriptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExportOptionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton ok;
    private javax.swing.JCheckBox step;
    private javax.swing.JCheckBox testCase;
    private javax.swing.JCheckBox testPlan;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the usePlan
     */
    public boolean isUsePlan() {
        return usePlan;
    }

    /**
     * @return the useTestCase
     */
    public boolean isUseTestCase() {
        return useTestCase;
    }

    /**
     * @return the useStep
     */
    public boolean isUseStep() {
        return useStep;
    }

    /**
     * @return the useDescription
     */
    public boolean isUseDescription() {
        return useDescription;
    }
}
